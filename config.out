checking for gcc... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang accepts -g... yes
checking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang option to accept ISO C89... none needed
checking how to run the C preprocessor... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking minix/config.h usability... no
checking minix/config.h presence... no
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking for unistd.h... (cached) yes
checking sys/ioctl.h usability... yes
checking sys/ioctl.h presence... yes
checking for sys/ioctl.h... yes
checking for a BSD-compatible install... /usr/local/bin/ginstall -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/local/bin/gmkdir -p
checking for gawk... no
checking for mawk... no
checking for nawk... no
checking for awk... awk
checking whether make sets $(MAKE)... yes
checking for style of include used by make... GNU
checking dependency style of /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang... gcc3
checking whether make supports nested variables... yes
checking build system type... x86_64-apple-darwin13.4.0
checking host system type... x86_64-apple-darwin13.4.0
checking how to print strings... printf
checking for a sed that does not truncate output... /usr/bin/sed
checking for fgrep... /usr/bin/grep -F
checking for ld used by /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
checking if the linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) is GNU ld... no
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm
checking the name lister (/usr/bin/nm) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... 196608
checking whether the shell understands some XSI constructs... yes
checking whether the shell understands "+="... yes
checking how to convert x86_64-apple-darwin13.4.0 file names to x86_64-apple-darwin13.4.0 format... func_convert_file_noop
checking how to convert x86_64-apple-darwin13.4.0 file names to toolchain format... func_convert_file_noop
checking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld option to reload object files... -r
checking for objdump... no
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for ar... ar
checking for archiver @FILE support... no
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm output from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang object... ok
checking for sysroot... /Users/sseefried/ghc-ios/i386-sysroot
checking for mt... no
checking if : is a manifest tool... no
checking for dsymutil... dsymutil
checking for nmedit... nmedit
checking for lipo... lipo
checking for otool... otool
checking for otool64... no
checking for -single_module linker flag... yes
checking for -exported_symbols_list linker flag... yes
checking for -force_load linker flag... yes
checking for dlfcn.h... yes
checking for objdir... .libs
checking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -fno-rtti -fno-exceptions... yes
checking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang option to produce PIC... -fno-common -DPIC
checking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang PIC flag -fno-common -DPIC works... yes
checking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang static flag -static works... no
checking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -c -o file.o... yes
checking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -c -o file.o... (cached) yes
checking whether the /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes
checking dynamic linker characteristics... darwin13.4.0 dyld
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for pkg-config... /usr/local/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for gtkdoc-check... no
checking for gtkdoc-rebase... no
checking for gtkdoc-mkpdf... no
checking whether to build gtk-doc documentation... no
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking for find... /usr/bin/find
checking for xargs... /usr/bin/xargs
checking for gcc... (cached) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang
checking whether we are using the GNU C compiler... (cached) yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang accepts -g... (cached) yes
checking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang option to accept ISO C89... (cached) none needed
checking how to run the C preprocessor... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -E
checking for g++... g++
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking dependency style of g++... gcc3
checking how to run the C++ preprocessor... g++ -E
checking for ld used by g++... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
checking if the linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) is GNU ld... no
checking whether the g++ linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes
checking for g++ option to produce PIC... -fno-common -DPIC
checking if g++ PIC flag -fno-common -DPIC works... yes
checking if g++ static flag -static works... no
checking if g++ supports -c -o file.o... yes
checking if g++ supports -c -o file.o... (cached) yes
checking whether the g++ linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes
checking dynamic linker characteristics... darwin13.4.0 dyld
checking how to hardcode library paths into programs... immediate
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang and cc understand -c and -o together... yes
checking for inline... inline
checking for pkg-config... (cached) /usr/local/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for supported warning flags... 
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Werror... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -errwarn... no
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wall... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wextra... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wold-style-definition... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wdeclaration-after-statement... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wmissing-declarations... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Werror-implicit-function-declaration... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wnested-externs... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wpointer-arith... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wwrite-strings... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wsign-compare... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wstrict-prototypes... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wmissing-prototypes... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wpacked... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wswitch-enum... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wmissing-format-attribute... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wbad-function-cast... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wvolatile-register-var... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wstrict-aliasing=2... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Winit-self... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wunsafe-loop-optimizations... no
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wno-missing-field-initializers... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wno-unused-parameter... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wno-attributes... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wno-long-long... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Winline... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -erroff=E_ENUM_TYPE_MISMATCH_ARG... no
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -erroff=E_ENUM_TYPE_MISMATCH_OP... no
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -fno-strict-aliasing... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -fno-common... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wp,-D_FORTIFY_SOURCE=2... yes
checking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang supports -Wunused-but-set-variable -Wno-unused-but-set-variable... no
checking which warning flags were supported...  -Wall -Wextra -Wold-style-definition -Wdeclaration-after-statement -Wmissing-declarations -Werror-implicit-function-declaration -Wnested-externs -Wpointer-arith -Wwrite-strings -Wsign-compare -Wstrict-prototypes -Wmissing-prototypes -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wbad-function-cast -Wvolatile-register-var -Wstrict-aliasing=2 -Winit-self -Wno-missing-field-initializers -Wno-unused-parameter -Wno-attributes -Wno-long-long -Winline -fno-strict-aliasing -fno-common -Wp,-D_FORTIFY_SOURCE=2
checking how to enable unused result warnings... 
checking how to allow undefined symbols in shared libraries used by test suite... 
checking for native atomic primitives... Intel
checking whether atomic ops require a memory barrier... no
checking size of void *... 4
checking size of int... 4
checking size of long... 4
checking size of long long... 8
checking size of size_t... 4
checking for native Win32... no
checking for Sun Solaris (non-POSIX ctime_r)... no
checking for sched_yield in -lrt... no
checking for shm_open in -lrt... no
checking for connect in -lsocket... no
checking for __builtin_return_address(0)... yes
checking for stdint.h... (cached) yes
checking for inttypes.h... (cached) yes
checking sys/int_types.h usability... no
checking sys/int_types.h presence... no
checking for sys/int_types.h... no
checking for uint64_t... yes
checking for uint128_t... no
checking for __uint128_t... no
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking for unistd.h... (cached) yes
checking signal.h usability... yes
checking signal.h presence... yes
checking for signal.h... yes
checking for sys/stat.h... (cached) yes
checking sys/socket.h usability... yes
checking sys/socket.h presence... yes
checking for sys/socket.h... yes
checking sys/poll.h usability... yes
checking sys/poll.h presence... yes
checking for sys/poll.h... yes
checking sys/un.h usability... yes
checking sys/un.h presence... yes
checking for sys/un.h... yes
checking for alarm... yes
checking sched.h usability... yes
checking sched.h presence... yes
checking for sched.h... yes
checking for sched_getaffinity... no
checking sys/mman.h usability... yes
checking sys/mman.h presence... yes
checking for sys/mman.h... yes
checking for mmap... yes
checking time.h usability... yes
checking time.h presence... yes
checking for time.h... yes
checking for clock_gettime... no
checking fenv.h usability... yes
checking fenv.h presence... yes
checking for fenv.h... yes
checking for feenableexcept... no
checking for fedisableexcept... no
checking for feclearexcept... yes
checking libgen.h usability... yes
checking libgen.h presence... yes
checking for libgen.h... yes
checking byteswap.h usability... no
checking byteswap.h presence... no
checking for byteswap.h... no
checking for signal.h... (cached) yes
checking setjmp.h usability... yes
checking setjmp.h presence... yes
checking for setjmp.h... yes
checking for fenv.h... (cached) yes
checking sys/wait.h usability... yes
checking sys/wait.h presence... yes
checking for sys/wait.h... yes
checking for ctime_r... yes
checking for drand48... yes
checking for flockfile... yes
checking for funlockfile... yes
checking for getline... yes
checking for link... yes
checking for strndup... yes
checking windows.h usability... no
checking windows.h presence... no
checking for windows.h... no
checking for sys/stat.h... (cached) yes
checking io.h usability... no
checking io.h presence... no
checking for io.h... no
checking for mkdir... yes
checking mkdir variant... mkdir(path, mode)
checking for fork... yes
checking for waitpid... yes
checking for raise... yes
checking for VALGRIND... no
no
checking for compress in -lz... yes
checking zlib.h usability... yes
checking zlib.h presence... yes
checking for zlib.h... yes
checking for lzo2a_decompress in -llzo2... no
checking for dlsym in -ldl... yes
checking for dlfcn.h... (cached) yes
checking for X... libraries /usr/X11/lib, headers /usr/X11/include
checking for cairo's Xlib surface backend feature... 
checking for xlib... yes
checking sys/ipc.h usability... yes
checking sys/ipc.h presence... yes
checking for sys/ipc.h... yes
checking sys/shm.h usability... yes
checking sys/shm.h presence... yes
checking for sys/shm.h... yes
checking whether shmctl IPC_RMID allowes subsequent attaches... no
checking for X11/extensions/XShm.h... no
checking for X11/extensions/shmproto.h... no
checking for X11/extensions/shmstr.h... no
checking whether cairo's Xlib surface backend feature could be enabled... yes
checking for cairo's Xlib Xrender surface backend feature... 
checking for xlib_xrender... yes
checking for XRenderCreateLinearGradient... yes
checking for XRenderCreateRadialGradient... yes
checking for XRenderCreateConicalGradient... yes
checking whether cairo's Xlib Xrender surface backend feature could be enabled... yes
checking for cairo's XCB surface backend feature... 
checking for xcb... yes
checking whether cairo's XCB surface backend feature could be enabled... yes
checking for cairo's XCB/SHM functions feature... 
checking for xcb_shm... yes
checking whether cairo's XCB/SHM functions feature could be enabled... yes
checking for cairo's Quartz surface backend feature... 
checking ApplicationServices/ApplicationServices.h usability... yes
checking ApplicationServices/ApplicationServices.h presence... yes
checking for ApplicationServices/ApplicationServices.h... yes
checking whether cairo's Quartz surface backend feature could be enabled... yes
checking for cairo's Quartz font backend feature... 
checking whether cairo's Quartz font backend feature could be enabled... yes
checking for cairo's Microsoft Windows surface backend feature... 
checking whether cairo's Microsoft Windows surface backend feature could be enabled... no (requires a Win32 platform)
checking for cairo's Microsoft Windows font backend feature... 
checking whether cairo's Microsoft Windows font backend feature could be enabled... no (requires a Win32 platform)
checking for cairo's PNG functions feature... 
checking for png... yes
checking whether cairo's PNG functions feature could be enabled... yes
checking for cairo's EGL functions feature... 
checking whether cairo's EGL functions feature could be enabled... no (not required by any backend)
checking for cairo's GLX functions feature... 
checking whether cairo's GLX functions feature could be enabled... no (not required by any backend)
checking for cairo's WGL functions feature... 
checking whether cairo's WGL functions feature could be enabled... no (not required by any backend)
checking for cairo's script surface backend feature... 
checking whether cairo's script surface backend feature could be enabled... yes
checking for cairo's FreeType font backend feature... 
checking for FREETYPE... yes
checking whether cairo's FreeType font backend feature could be enabled... yes
checking for cairo's Fontconfig font backend feature... 
checking for FONTCONFIG... yes
checking whether cairo's Fontconfig font backend feature could be enabled... yes
checking for FT_Get_X11_Font_Format... yes
checking for FT_GlyphSlot_Embolden... yes
checking for FT_GlyphSlot_Oblique... yes
checking for FT_Load_Sfnt_Table... yes
checking for FT_Library_SetLcdFilter... yes
checking for FcInit... yes
checking for FcFini... yes
checking for cairo's PostScript surface backend feature... 
checking whether cairo's PostScript surface backend feature could be enabled... yes
checking for gs... no
configure: WARNING: PS backend will not be tested since ghostscript is not available
checking for LIBSPECTRE... no
checking for cairo's PDF surface backend feature... 
checking whether cairo's PDF surface backend feature could be enabled... yes
checking for POPPLER... no
configure: WARNING: PDF backend will not be tested since poppler >= 0.17.4 is not available
checking for cairo's SVG surface backend feature... 
checking whether cairo's SVG surface backend feature could be enabled... yes
checking for LIBRSVG... no
configure: WARNING: SVG backend will not be tested since librsvg >= 2.15.0 is not available
checking for cairo's image surface backend feature... 
checking for pixman... yes
checking whether cairo's image surface backend feature could be enabled... yes
checking for cairo's mime surface backend feature... 
checking whether cairo's mime surface backend feature could be enabled... yes
checking for cairo's recording surface backend feature... 
checking whether cairo's recording surface backend feature could be enabled... yes
checking for cairo's observer surface backend feature... 
checking whether cairo's observer surface backend feature could be enabled... yes
checking for cairo's user font backend feature... 
checking whether cairo's user font backend feature could be enabled... yes
checking for cairo's pthread feature... 
checking whether cairo's pthread feature could be enabled... yes
checking for cairo's gobject functions feature... 
checking for GOBJECT... yes
checking whether cairo's gobject functions feature could be enabled... yes
checking for GOBJECT... yes
checking for cairo's cairo-trace feature... 
checking whether cairo's cairo-trace feature could be enabled... yes
checking for cairo's cairo-script-interpreter feature... 
checking whether cairo's cairo-script-interpreter feature could be enabled... yes
checking for bfd_openr in -lbfd... no
checking libiberty.h usability... no
checking libiberty.h presence... no
checking for libiberty.h... no
checking for cairo's symbol-lookup feature... 
checking whether cairo's symbol-lookup feature could be enabled... no (requires bfd)
checking for glib... yes
checking for shm_open in -lrt... (cached) no
checking for gtk... no
configure: creating ./config.status
config.status: creating src/cairo.pc
config.status: creating cairo-uninstalled.pc
config.status: creating src/cairo-xlib.pc
config.status: creating cairo-xlib-uninstalled.pc
config.status: creating src/cairo-xlib-xrender.pc
config.status: creating cairo-xlib-xrender-uninstalled.pc
config.status: creating src/cairo-xcb.pc
config.status: creating cairo-xcb-uninstalled.pc
config.status: creating src/cairo-xcb-shm.pc
config.status: creating cairo-xcb-shm-uninstalled.pc
config.status: creating src/cairo-quartz.pc
config.status: creating cairo-quartz-uninstalled.pc
config.status: creating src/cairo-quartz-font.pc
config.status: creating cairo-quartz-font-uninstalled.pc
config.status: creating src/cairo-png.pc
config.status: creating cairo-png-uninstalled.pc
config.status: creating src/cairo-script.pc
config.status: creating cairo-script-uninstalled.pc
config.status: creating src/cairo-ft.pc
config.status: creating cairo-ft-uninstalled.pc
config.status: creating src/cairo-fc.pc
config.status: creating cairo-fc-uninstalled.pc
config.status: creating src/cairo-ps.pc
config.status: creating cairo-ps-uninstalled.pc
config.status: creating src/cairo-pdf.pc
config.status: creating cairo-pdf-uninstalled.pc
config.status: creating src/cairo-svg.pc
config.status: creating cairo-svg-uninstalled.pc
config.status: creating src/cairo-gobject.pc
config.status: creating cairo-gobject-uninstalled.pc
config.status: creating Makefile
config.status: creating boilerplate/Makefile
config.status: creating src/Makefile
config.status: creating test/Makefile
config.status: creating test/pdiff/Makefile
config.status: creating perf/Makefile
config.status: creating perf/micro/Makefile
config.status: creating util/Makefile
config.status: creating util/cairo-fdr/Makefile
config.status: creating util/cairo-gobject/Makefile
config.status: creating util/cairo-missing/Makefile
config.status: creating util/cairo-script/Makefile
config.status: creating util/cairo-script/examples/Makefile
config.status: creating util/cairo-sphinx/Makefile
config.status: creating util/cairo-trace/Makefile
config.status: creating util/cairo-trace/cairo-trace
config.status: creating doc/Makefile
config.status: creating doc/public/Makefile
config.status: creating config.h
config.status: config.h is unchanged
config.status: executing depfiles commands
config.status: executing libtool commands
config.status: executing ./build/Makefile.win32.features commands
config.status: creating ./build/Makefile.win32.features
config.status: ./build/Makefile.win32.features is unchanged
config.status: executing ./src/Makefile.am.features commands
config.status: creating ./src/Makefile.am.features
config.status: ./src/Makefile.am.features is unchanged
config.status: executing ./src/Makefile.win32.features commands
config.status: creating ./src/Makefile.win32.features
config.status: ./src/Makefile.win32.features is unchanged
config.status: executing ./boilerplate/Makefile.am.features commands
config.status: creating ./boilerplate/Makefile.am.features
config.status: ./boilerplate/Makefile.am.features is unchanged
config.status: executing ./boilerplate/Makefile.win32.features commands
config.status: creating ./boilerplate/Makefile.win32.features
config.status: ./boilerplate/Makefile.win32.features is unchanged
config.status: executing src/cairo-features.h commands
config.status: creating src/cairo-features.h
config.status: src/cairo-features.h is unchanged
config.status: executing src/cairo-supported-features.h commands
config.status: creating src/cairo-supported-features.h
config.status: src/cairo-supported-features.h is unchanged
config.status: executing ./build/Makefile.win32.features-h commands
config.status: creating ./build/Makefile.win32.features-h
config.status: ./build/Makefile.win32.features-h is unchanged

cairo (version 1.12.16 [release]) will be compiled with:

The following surface backends:
  Image:         yes (always builtin)
  Recording:     yes (always builtin)
  Observer:      yes (always builtin)
  Mime:          yes (always builtin)
  Tee:           no (disabled, use --enable-tee to enable)
  XML:           no (disabled, use --enable-xml to enable)
  Skia:          no (disabled, use --enable-skia to enable)
  Xlib:          yes
  Xlib Xrender:  yes
  Qt:            no (disabled, use --enable-qt to enable)
  Quartz:        yes
  Quartz-image:  no (disabled, use --enable-quartz-image to enable)
  XCB:           yes
  Win32:         no (requires a Win32 platform)
  OS2:           no (disabled, use --enable-os2 to enable)
  CairoScript:   yes
  PostScript:    yes
  PDF:           yes
  SVG:           yes
  OpenGL:        no (disabled, use --enable-gl to enable)
  OpenGL ES 2.0: no (disabled, use --enable-glesv2 to enable)
  BeOS:          no (disabled, use --enable-beos to enable)
  DirectFB:      no (disabled, use --enable-directfb to enable)
  OpenVG:        no (disabled, use --enable-vg to enable)
  DRM:           no (disabled, use --enable-drm to enable)
  Cogl:          no (disabled, use --enable-cogl to enable)

The following font backends:
  User:          yes (always builtin)
  FreeType:      yes
  Fontconfig:    yes
  Win32:         no (requires a Win32 platform)
  Quartz:        yes

The following functions:
  PNG functions:   yes
  GLX functions:   no (not required by any backend)
  WGL functions:   no (not required by any backend)
  EGL functions:   no (not required by any backend)
  X11-xcb functions: no (disabled, use --enable-xlib-xcb to enable)
  XCB-shm functions: yes

The following features and utilities:
  cairo-trace:                yes
  cairo-script-interpreter:   yes

And the following internal features:
  pthread:       yes
  gtk-doc:       no
  gcov support:  no
  symbol-lookup: no (requires bfd)
  test surfaces: no (disabled, use --enable-test-surfaces to enable)
  ps testing:    no (requires libspectre)
  pdf testing:   no (requires poppler-glib >= 0.17.4)
  svg testing:   no (requires librsvg-2.0 >= 2.15.0)


